{
	"name": "Cases_and_deaths",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "cases_and_deaths",
						"type": "DatasetReference"
					},
					"name": "Deaths"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_cases_and_deaths_dl",
						"type": "DatasetReference"
					},
					"name": "countDeathsConfirmed"
				}
			],
			"transformations": [
				{
					"name": "filteredData"
				},
				{
					"name": "selectColumns"
				},
				{
					"name": "dataGroupBy"
				}
			],
			"script": "source(output(\n\t\tcountry as string,\n\t\tcountry_code as string,\n\t\tcontinent as string,\n\t\tpopulation as string,\n\t\tindicator as string,\n\t\tdaily_count as string,\n\t\tdate as string,\n\t\trate_14_day as string,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Deaths\nDeaths filter(country_code=='AFG') ~> filteredData\nfilteredData select(mapColumn(\n\t\tcountry,\n\t\tindicator,\n\t\tdaily_count\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectColumns\nselectColumns aggregate(groupBy(country,\n\t\tindicator),\n\tdaily_count = sum(toInteger(daily_count))) ~> dataGroupBy\ndataGroupBy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> countDeathsConfirmed"
		}
	}
}